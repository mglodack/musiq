<?xml version="1.0" encoding="utf-8"?>
<Schema Namespace="jukebox_accountsModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
  <!--Errors Found During Generation:
warning 6002: The table/view 'jukebox_accounts.dbo.__MigrationHistory' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="__MigrationHistory">
    <Key>
      <PropertyRef Name="MigrationId" />
      <PropertyRef Name="ContextKey" />
      <PropertyRef Name="Model" />
      <PropertyRef Name="ProductVersion" />
    </Key>
    <Property Name="MigrationId" Type="nvarchar" MaxLength="255" Nullable="false" />
    <Property Name="ContextKey" Type="nvarchar" MaxLength="512" Nullable="false" />
    <Property Name="Model" Type="varbinary(max)" Nullable="false" />
    <Property Name="ProductVersion" Type="nvarchar" MaxLength="32" Nullable="false" />
  </EntityType>
  <EntityType Name="AspNetRoles">
    <Key>
      <PropertyRef Name="Id" />
    </Key>
    <Property Name="Id" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="Name" Type="nvarchar(max)" Nullable="false" />
  </EntityType>
  <EntityType Name="AspNetUserClaims">
    <Key>
      <PropertyRef Name="Id" />
    </Key>
    <Property Name="Id" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="ClaimType" Type="nvarchar(max)" />
    <Property Name="ClaimValue" Type="nvarchar(max)" />
    <Property Name="User_Id" Type="nvarchar" MaxLength="128" Nullable="false" />
  </EntityType>
  <EntityType Name="AspNetUserLogins">
    <Key>
      <PropertyRef Name="UserId" />
      <PropertyRef Name="LoginProvider" />
      <PropertyRef Name="ProviderKey" />
    </Key>
    <Property Name="UserId" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="LoginProvider" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="ProviderKey" Type="nvarchar" MaxLength="128" Nullable="false" />
  </EntityType>
  <EntityType Name="AspNetUserRoles">
    <Key>
      <PropertyRef Name="UserId" />
      <PropertyRef Name="RoleId" />
    </Key>
    <Property Name="UserId" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="RoleId" Type="nvarchar" MaxLength="128" Nullable="false" />
  </EntityType>
  <EntityType Name="AspNetUsers">
    <Key>
      <PropertyRef Name="Id" />
    </Key>
    <Property Name="Id" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="UserName" Type="nvarchar(max)" />
    <Property Name="PasswordHash" Type="nvarchar(max)" />
    <Property Name="SecurityStamp" Type="nvarchar(max)" />
    <Property Name="Discriminator" Type="nvarchar" MaxLength="128" Nullable="false" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'jukebox_accounts.dbo.Roles' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="Roles">
    <Key>
      <PropertyRef Name="Id" />
    </Key>
    <Property Name="Id" Type="nvarchar" MaxLength="128" Nullable="false" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'jukebox_accounts.dbo.UserLogins' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="UserLogins">
    <Key>
      <PropertyRef Name="LoginProvider" />
      <PropertyRef Name="ProviderKey" />
    </Key>
    <Property Name="LoginProvider" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="ProviderKey" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="UserId" Type="nvarchar(max)" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'jukebox_accounts.dbo.UserRoles' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="UserRoles">
    <Key>
      <PropertyRef Name="RoleId" />
      <PropertyRef Name="UserId" />
    </Key>
    <Property Name="RoleId" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="UserId" Type="nvarchar" MaxLength="128" Nullable="false" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'jukebox_accounts.dbo.Users' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="Users">
    <Key>
      <PropertyRef Name="Id" />
    </Key>
    <Property Name="Id" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="UserName" Type="nvarchar(max)" />
    <Property Name="FirstName" Type="nvarchar(max)" />
    <Property Name="LastName" Type="nvarchar(max)" />
    <Property Name="ProfilePicURL" Type="nvarchar(max)" />
    <Property Name="FacebookAccessToken" Type="nvarchar(max)" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'jukebox_accounts.dbo.UserSecrets' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="UserSecrets">
    <Key>
      <PropertyRef Name="UserName" />
    </Key>
    <Property Name="UserName" Type="nvarchar" MaxLength="128" Nullable="false" />
    <Property Name="Secret" Type="nvarchar(max)" />
  </EntityType>
  <Association Name="FK_dbo_AspNetUserClaims_dbo_AspNetUsers_User_Id">
    <End Role="AspNetUsers" Type="Self.AspNetUsers" Multiplicity="1">
      <OnDelete Action="Cascade" />
    </End>
    <End Role="AspNetUserClaims" Type="Self.AspNetUserClaims" Multiplicity="*" />
    <ReferentialConstraint>
      <Principal Role="AspNetUsers">
        <PropertyRef Name="Id" />
      </Principal>
      <Dependent Role="AspNetUserClaims">
        <PropertyRef Name="User_Id" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId">
    <End Role="AspNetUsers" Type="Self.AspNetUsers" Multiplicity="1">
      <OnDelete Action="Cascade" />
    </End>
    <End Role="AspNetUserLogins" Type="Self.AspNetUserLogins" Multiplicity="*" />
    <ReferentialConstraint>
      <Principal Role="AspNetUsers">
        <PropertyRef Name="Id" />
      </Principal>
      <Dependent Role="AspNetUserLogins">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="FK_dbo_AspNetUserRoles_dbo_AspNetRoles_RoleId">
    <End Role="AspNetRoles" Type="Self.AspNetRoles" Multiplicity="1">
      <OnDelete Action="Cascade" />
    </End>
    <End Role="AspNetUserRoles" Type="Self.AspNetUserRoles" Multiplicity="*" />
    <ReferentialConstraint>
      <Principal Role="AspNetRoles">
        <PropertyRef Name="Id" />
      </Principal>
      <Dependent Role="AspNetUserRoles">
        <PropertyRef Name="RoleId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="FK_dbo_AspNetUserRoles_dbo_AspNetUsers_UserId">
    <End Role="AspNetUsers" Type="Self.AspNetUsers" Multiplicity="1">
      <OnDelete Action="Cascade" />
    </End>
    <End Role="AspNetUserRoles" Type="Self.AspNetUserRoles" Multiplicity="*" />
    <ReferentialConstraint>
      <Principal Role="AspNetUsers">
        <PropertyRef Name="Id" />
      </Principal>
      <Dependent Role="AspNetUserRoles">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <EntityContainer Name="jukebox_accountsModelStoreContainer">
    <EntitySet Name="AspNetRoles" EntityType="Self.AspNetRoles" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="AspNetUserClaims" EntityType="Self.AspNetUserClaims" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="AspNetUserLogins" EntityType="Self.AspNetUserLogins" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="AspNetUserRoles" EntityType="Self.AspNetUserRoles" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="AspNetUsers" EntityType="Self.AspNetUsers" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="__MigrationHistory" EntityType="Self.__MigrationHistory" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [__MigrationHistory].[MigrationId] AS [MigrationId], 
    [__MigrationHistory].[ContextKey] AS [ContextKey], 
    [__MigrationHistory].[Model] AS [Model], 
    [__MigrationHistory].[ProductVersion] AS [ProductVersion]
    FROM [dbo].[__MigrationHistory] AS [__MigrationHistory]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="Roles" EntityType="Self.Roles" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [Roles].[Id] AS [Id]
    FROM [dbo].[Roles] AS [Roles]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="UserLogins" EntityType="Self.UserLogins" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [UserLogins].[LoginProvider] AS [LoginProvider], 
    [UserLogins].[ProviderKey] AS [ProviderKey], 
    [UserLogins].[UserId] AS [UserId]
    FROM [dbo].[UserLogins] AS [UserLogins]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="UserRoles" EntityType="Self.UserRoles" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [UserRoles].[RoleId] AS [RoleId], 
    [UserRoles].[UserId] AS [UserId]
    FROM [dbo].[UserRoles] AS [UserRoles]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="Users" EntityType="Self.Users" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [Users].[Id] AS [Id], 
    [Users].[UserName] AS [UserName], 
    [Users].[FirstName] AS [FirstName], 
    [Users].[LastName] AS [LastName], 
    [Users].[ProfilePicURL] AS [ProfilePicURL], 
    [Users].[FacebookAccessToken] AS [FacebookAccessToken]
    FROM [dbo].[Users] AS [Users]</DefiningQuery>
    </EntitySet>
    <EntitySet Name="UserSecrets" EntityType="Self.UserSecrets" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [UserSecrets].[UserName] AS [UserName], 
    [UserSecrets].[Secret] AS [Secret]
    FROM [dbo].[UserSecrets] AS [UserSecrets]</DefiningQuery>
    </EntitySet>
    <AssociationSet Name="FK_dbo_AspNetUserClaims_dbo_AspNetUsers_User_Id" Association="Self.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_User_Id">
      <End Role="AspNetUsers" EntitySet="AspNetUsers" />
      <End Role="AspNetUserClaims" EntitySet="AspNetUserClaims" />
    </AssociationSet>
    <AssociationSet Name="FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId" Association="Self.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId">
      <End Role="AspNetUsers" EntitySet="AspNetUsers" />
      <End Role="AspNetUserLogins" EntitySet="AspNetUserLogins" />
    </AssociationSet>
    <AssociationSet Name="FK_dbo_AspNetUserRoles_dbo_AspNetRoles_RoleId" Association="Self.FK_dbo_AspNetUserRoles_dbo_AspNetRoles_RoleId">
      <End Role="AspNetRoles" EntitySet="AspNetRoles" />
      <End Role="AspNetUserRoles" EntitySet="AspNetUserRoles" />
    </AssociationSet>
    <AssociationSet Name="FK_dbo_AspNetUserRoles_dbo_AspNetUsers_UserId" Association="Self.FK_dbo_AspNetUserRoles_dbo_AspNetUsers_UserId">
      <End Role="AspNetUsers" EntitySet="AspNetUsers" />
      <End Role="AspNetUserRoles" EntitySet="AspNetUserRoles" />
    </AssociationSet>
  </EntityContainer>
</Schema>